package com.example.mygroceries;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.Map;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.util.DisplayMetrics;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ExpandableListView;
import android.widget.ExpandableListView.OnChildClickListener;
import android.widget.ExpandableListView.OnGroupExpandListener;

import com.example.mygroceries.adapter.ItemAdapter;
import com.example.mygroceries.database.Brand;
import com.example.mygroceries.database.DBBrand;
import com.example.mygroceries.database.DBItem;
import com.example.mygroceries.database.Item;

public class ItemsFragment extends Fragment {

	private ArrayList<Item> parentList;
	private ArrayList<Brand> childList;
	private Map<Item, ArrayList<Brand>> collections;
	private ExpandableListView expandableListView;
	private int lastExpandedPosition = -1;
	private View view;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		view = inflater.inflate(R.layout.fragment_items, container, false);
		setHasOptionsMenu(true);
		
		return view;
	}
	
	@Override
    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
    	inflater.inflate(R.menu.add_menu, menu);
    }
	
	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		super.onActivityCreated(savedInstanceState);

		createParentList();

		createChildList();

		ItemAdapter adapter = new ItemAdapter(this.getActivity(), parentList, collections);
		
		expandableListView = (ExpandableListView) this.getView().findViewById(R.id.items_list);
		
		expandableListView.setAdapter(adapter);

		expandableListView.setOnGroupExpandListener(new OnGroupExpandListener() {

					public void onGroupExpand(int groupPosition) {
						if (lastExpandedPosition != -1
								&& groupPosition != lastExpandedPosition) {
							expandableListView
									.collapseGroup(lastExpandedPosition);
						}
						lastExpandedPosition = groupPosition;

					}
				});

		expandableListView.setOnChildClickListener(new OnChildClickListener() {

			@Override
			public boolean onChildClick(ExpandableListView parent, View v,
					int groupPosition, int childPosition, long id) {
				// Fal algo
				return true;
			}
		});
		
		expandableListView.setIndicatorBounds(10, 30);
	}

	private void createParentList() {
		DBItem db = new DBItem(view.getContext());

		parentList = db.getAll();
	}

	private void createChildList() {
		collections = new LinkedHashMap<Item, ArrayList<Brand>>();

		DBBrand db = new DBBrand(view.getContext());

		for (Item item : parentList) {

			childList = db.getBrandWithItemId(item.getId());

			collections.put(item, childList);
		}
	}
}
