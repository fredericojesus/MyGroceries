package com.example.mygroceries;

import java.util.Locale;

import android.app.Activity;
import android.app.Service;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.MenuItem.OnActionExpandListener;
import android.view.View;
import android.view.ViewGroup;
import android.view.inputmethod.InputMethodManager;
import android.widget.EditText;
import android.widget.ListView;

import com.example.mygroceries.adapter.CategoryAdapter;

public class CategoriesFragment extends Fragment {
	private CategoryAdapter adapter;
	private View rootView;
	private EditText editSearch;
	private Activity activity;

	@Override
	public View onCreateView(LayoutInflater layoutInflater, ViewGroup container, Bundle savedInstanceState) {
		activity = this.getActivity();
		rootView = layoutInflater.inflate(R.layout.fragment_categories, container, false);
		setHasOptionsMenu(true);

		return rootView;
	}

	@Override
	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
		inflater.inflate(R.menu.stock_menu, menu);
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case R.id.search_menu:
			search(item);
			break;
		case R.id.add_menu:
			adapter.insertUpdateDialog(-1);
			break;
		}
		return true;
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		super.onActivityCreated(savedInstanceState);

		ListView categoriesList = (ListView) rootView.findViewById(R.id.category_list);

		adapter = new CategoryAdapter(rootView.getContext());

		categoriesList.setAdapter(adapter);
	}

	private void search(MenuItem item) {
		editSearch = (EditText) item.getActionView();
		editSearch.addTextChangedListener(textWatcher);

		item.setOnActionExpandListener(new OnActionExpandListener() {

			@Override
			public boolean onMenuItemActionExpand(MenuItem item) {
				editSearch.setText("");
				editSearch.requestFocus();

				InputMethodManager imm = (InputMethodManager) activity.getSystemService(Service.INPUT_METHOD_SERVICE);
				imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);
				return true;
			}

			@Override
			public boolean onMenuItemActionCollapse(MenuItem item) {
				editSearch.clearFocus();

				return true;
			}
		});
	}

	private TextWatcher textWatcher = new TextWatcher() {

		@Override
		public void onTextChanged(CharSequence s, int start, int before, int count) {
			String text = editSearch.getText().toString().toLowerCase(Locale.getDefault());
			
			adapter.filter(text);
		}

		@Override
		public void beforeTextChanged(CharSequence s, int start, int count, int after) {
		}

		@Override
		public void afterTextChanged(Editable s) {
		}
	};
}

// Dialogs dialogs = new Dialogs(rootView.getContext());
//
// dialogs.confirmationDialog(this.getActivity(), textEntryView,
// this.getString(R.string.alert_dialog_category), "", "");
//
// if (dialogs.getOption()){
// if(!categoryName.getText().toString().equals("")){
// Category cat = new Category(categoryName.getText().toString());
// long id = db.insert(cat);
//
// cat.setId(id);
//
// adapter.addRow(cat);
// adapter.notifyDataSetChanged();
//
// dialogs.showDialog("Categoria " + categoryName.getText().toString() +
// " adicionada.");
// }
// }