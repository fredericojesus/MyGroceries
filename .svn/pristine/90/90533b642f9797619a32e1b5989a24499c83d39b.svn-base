package com.example.mygroceries;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.Map;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.EditText;
import android.widget.ExpandableListView;
import android.widget.ExpandableListView.OnChildClickListener;
import android.widget.ExpandableListView.OnGroupExpandListener;
import android.widget.RadioButton;
import android.widget.Spinner;
import android.widget.Toast;

import com.example.mygroceries.adapter.CategorySpinnerAdapter;
import com.example.mygroceries.adapter.ItemAdapter;
import com.example.mygroceries.adapter.StorageAreaSpinnerAdapter;
import com.example.mygroceries.database.Brand;
import com.example.mygroceries.database.Category;
import com.example.mygroceries.database.DBBrand;
import com.example.mygroceries.database.DBCategory;
import com.example.mygroceries.database.DBItem;
import com.example.mygroceries.database.DBStorageArea;
import com.example.mygroceries.database.Item;
import com.example.mygroceries.database.StorageArea;

public class ItemsFragment extends Fragment {

	private ArrayList<Item> parentList;
	private ArrayList<Brand> childList;
	private Map<Item, ArrayList<Brand>> collections;
	private ExpandableListView expandableListView;
	private int lastExpandedPosition = -1;
	private View rootView;
	private EditText itemName;
	private DBItem db;
	private ItemAdapter adapter;
	private RadioButton radioButtonQuantity;
	private RadioButton radioButtonNeed;
	private Spinner spinnerCategory;
	private Spinner spinnerStorageArea;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		rootView = inflater.inflate(R.layout.fragment_items, container, false);
		setHasOptionsMenu(true);

		return rootView;
	}

	@Override
	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
		inflater.inflate(R.menu.add_menu, menu);
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		super.onActivityCreated(savedInstanceState);

		createParentList();

		createChildList();

		ItemAdapter adapter = new ItemAdapter(this.getActivity(), parentList,
				collections);

		expandableListView = (ExpandableListView) this.getView().findViewById(
				R.id.items_list);

		expandableListView.setAdapter(adapter);

		expandableListView
				.setOnGroupExpandListener(new OnGroupExpandListener() {

					public void onGroupExpand(int groupPosition) {
						if (lastExpandedPosition != -1
								&& groupPosition != lastExpandedPosition) {
							expandableListView
									.collapseGroup(lastExpandedPosition);
						}
						lastExpandedPosition = groupPosition;

					}
				});

		expandableListView.setOnChildClickListener(new OnChildClickListener() {

			@Override
			public boolean onChildClick(ExpandableListView parent, View v,
					int groupPosition, int childPosition, long id) {
				return true;
			}
		});

		expandableListView.setIndicatorBounds(10, 30);
	}

	public boolean onOptionsItemSelected(MenuItem item) {
		// startActivity(new Intent("mygroceries.ItemEditActivity"));

		LayoutInflater inflater = LayoutInflater.from(this.getActivity());
		View textEntryView = inflater.inflate(
				R.layout.alert_dialog_cat_sto_text_entry, null);
		itemName = (EditText) textEntryView
				.findViewById(R.id.alert_dialog_item_text);
		View alertView = inflater.inflate(R.layout.alert_dialog_add_item, null);
		radioButtonQuantity = (RadioButton) alertView
				.findViewById(R.id.radio_quantity);
		radioButtonNeed = (RadioButton) alertView.findViewById(R.id.radio_need);
		spinnerCategory = (Spinner) alertView
				.findViewById(R.id.category_spinner);
		spinnerStorageArea = (Spinner) alertView
				.findViewById(R.id.storage_area_spinner);

		populateSpinnerCategory();

		populateSpinnerStorageArea();

		AlertDialog alertDialog = new AlertDialog.Builder(this.getActivity())
				.setTitle(R.string.alert_dialog_add_category)
				.setView(alertView)
				.setNegativeButton(R.string.alert_dialog_cancel,
						new DialogInterface.OnClickListener() {

							@Override
							public void onClick(DialogInterface dialog,
									int which) {

							}
						})
				.setPositiveButton(R.string.alert_dialog_ok,
						new DialogInterface.OnClickListener() {

							@Override
							public void onClick(DialogInterface dialog,
									int which) {
								Context context = rootView.getContext();
								if (itemName.getText().toString().equals(""))
									return;
								Toast toast = Toast
										.makeText(
												context,
												R.string.alert_dialog_add_category_toast,
												Toast.LENGTH_SHORT);
								toast.show();

								Item item = new Item(itemName.getText()
										.toString());
								db.insert(item);
								adapter.addRow(item);
								adapter.notifyDataSetChanged();
							}
						}).create();
		alertDialog.getWindow().setSoftInputMode(
				WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);
		alertDialog.show();
		return true;
	}

	private void populateSpinnerCategory() {
		DBCategory db = new DBCategory(rootView.getContext());

		ArrayList<Category> categories = db.getAll();

		CategorySpinnerAdapter adapter = new CategorySpinnerAdapter(this.getActivity(), categories);

		spinnerCategory.setAdapter(adapter);
	}

	private void populateSpinnerStorageArea() {
		DBStorageArea db = new DBStorageArea(rootView.getContext());

		ArrayList<StorageArea> storageAreas = db.getAll();
		
		StorageAreaSpinnerAdapter adapter = new StorageAreaSpinnerAdapter(this.getActivity(), storageAreas);
		
		spinnerStorageArea.setAdapter(adapter);
	}

	private void createParentList() {
		DBItem db = new DBItem(rootView.getContext());

		parentList = db.getAll();
	}

	private void createChildList() {
		collections = new LinkedHashMap<Item, ArrayList<Brand>>();

		DBBrand db = new DBBrand(rootView.getContext());

		for (Item item : parentList) {

			childList = db.getBrandWithItemId(item.getId());

			collections.put(item, childList);
		}
	}
}
