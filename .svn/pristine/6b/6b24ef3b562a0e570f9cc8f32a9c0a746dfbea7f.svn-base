package com.example.mygroceries;

import java.io.Serializable;
import java.util.ArrayList;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.WindowManager;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import com.example.mygroceries.adapter.ItemSpinnerAdapter;
import com.example.mygroceries.database.DBBrand;
import com.example.mygroceries.database.DBItem;
import com.example.mygroceries.database.Item;

public class ScanBarCode {
	private Activity activity;
	private RadioButton radioButtonAdd;
	private RadioButton radioButtonDel;
	private TextView currentQuantity;
	private EditText newQuantity;
	private Spinner spinnerItem;
	private Context context;
	private int refresh;

	public ScanBarCode(Activity activity, Context context, String code, int refresh) {
		this.activity = activity;
		this.context = context;
		this.refresh = refresh;
		
		int[] typeAndQuantity = existsCode(code);
		
		if (typeAndQuantity[0] != -1) {
			quantityDialog(code, typeAndQuantity);
		} else {
			addNewBrand(code);
		}
	}

	private int[] existsCode(String code) {
		DBBrand db = new DBBrand(activity.getBaseContext());

		int type[] = db.barCodeExists(code, -1);
		
		return type;
	}

	private void quantityDialog(final String code, final int[] typeAndQuantity) {
		View alertView = activity.getLayoutInflater().inflate(R.layout.alert_dialog_add_brand, null);
		radioButtonAdd = (RadioButton) alertView.findViewById(R.id.radio_add);
		radioButtonDel = (RadioButton) alertView.findViewById(R.id.radio_del);
		currentQuantity = (TextView) alertView.findViewById(R.id.currentQuantity);
		newQuantity = (EditText) alertView.findViewById(R.id.newQuantity);
		
		// Quantity
		if(typeAndQuantity[0] == 0){
			currentQuantity.setVisibility(View.VISIBLE);
			newQuantity.setVisibility(View.VISIBLE);
			
			currentQuantity.setText("Quantidade: " + typeAndQuantity[1]);
			newQuantity.setText("1");
		} else {
			currentQuantity.setVisibility(View.GONE);
			newQuantity.setVisibility(View.GONE);
		}

		AlertDialog alertDialog = new AlertDialog.Builder(activity).setTitle(R.string.title_quantity_brand)
				.setView(alertView)
				.setNegativeButton(R.string.alert_dialog_cancel, new DialogInterface.OnClickListener() {

					@Override
					public void onClick(DialogInterface dialog, int which) {

					}
				}).setPositiveButton(R.string.alert_dialog_ok, new DialogInterface.OnClickListener() {

					@Override
					public void onClick(DialogInterface dialog, int which) {
						DBItem dbItem = new DBItem(context);
						DBBrand dbBrand = new DBBrand(context);

						// long itemId = dbBrand.changeQuantity(code, 0);
						Item item = dbItem.getItemById(dbBrand.getBrandByCodeBar(code).getItemId());
						
						int quantity = 1;
						
						if(typeAndQuantity[0] == 0){
							quantity = Integer.parseInt(newQuantity.getText().toString());
						} 
							
						if (radioButtonDel.isChecked()) {
							if (item.getType() == 0) {
								if (dbBrand.changeQuantity(code, 0, quantity)) {
									dbItem.changeQuantity(item, 0);

									Toast toast = Toast.makeText(activity.getBaseContext(),
											R.string.alert_dialog_del_sucess, Toast.LENGTH_SHORT);
									toast.show();
								} else {
									Toast toast = Toast.makeText(activity.getBaseContext(),
											R.string.error_del_quantity_brand, Toast.LENGTH_SHORT);
									toast.show();
								}
							} else {
								if (dbBrand.changeNeed(code, 1)) {
									dbItem.changeType(item.getId(), 1);

									Toast toast = Toast.makeText(activity.getBaseContext(),
											R.string.alert_dialog_del_sucess, Toast.LENGTH_SHORT);
									toast.show();
								} else {
									Toast toast = Toast.makeText(activity.getBaseContext(), R.string.message_cant_del,
											Toast.LENGTH_SHORT);
									toast.show();
								}
							}
						} else if (radioButtonAdd.isChecked()) {
							if (item.getType() == 0) {
								dbBrand.changeQuantity(code, 1, quantity);
								dbItem.changeQuantity(item, 1);

								Toast toast = Toast.makeText(activity.getBaseContext(),
										R.string.alert_dialog_add_sucess, Toast.LENGTH_SHORT);
								toast.show();
							} else {
								if (dbBrand.changeNeed(code, 0)) {
									dbItem.changeType(item.getId(), 2);

									Toast toast = Toast.makeText(activity.getBaseContext(),
											R.string.alert_dialog_add_sucess, Toast.LENGTH_SHORT);
									toast.show();
								} else {
									Toast toast = Toast.makeText(activity.getBaseContext(), R.string.message_cant_add,
											Toast.LENGTH_SHORT);
									toast.show();
								}
							}
						}
						if(refresh == 1) {
							Intent intent = new Intent(activity, activity.getClass());
							activity.startActivity(intent);
						}
					}
				}).create();
		alertDialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);
		alertDialog.show();
	}

	private void addNewBrand(final String code) {
		View alertView = activity.getLayoutInflater().inflate(R.layout.alert_dialog_new_brand, null);
		spinnerItem = (Spinner) alertView.findViewById(R.id.item_spinner);

		populateSpinnerItem();

		AlertDialog alertDialog = new AlertDialog.Builder(activity).setTitle(R.string.title_select_item)
				.setView(alertView)
				.setNegativeButton(R.string.alert_dialog_cancel, new DialogInterface.OnClickListener() {

					@Override
					public void onClick(DialogInterface dialog, int which) {

					}
				}).setPositiveButton(R.string.alert_dialog_ok, new DialogInterface.OnClickListener() {

					@Override
					public void onClick(DialogInterface dialog, int which) {

						if (spinnerItem.getSelectedItemId() != 0) {
							Bundle bundle = new Bundle();
							bundle.putSerializable(
									"item",
									(Serializable) spinnerItem.getAdapter().getItem(
											spinnerItem.getSelectedItemPosition()));
							// bundle.putLong("itemId",
							// spinnerItem.getAdapter().getItemId(spinnerItem.getSelectedItemPosition()));
							bundle.putString("codeBar", code);

							activity.startActivity(new Intent(context, BrandEditActivity.class).putExtras(bundle));
							activity.finish();
						} else {
							Toast toast = Toast.makeText(activity.getBaseContext(),
									R.string.alert_dialog_error_item_empty, Toast.LENGTH_SHORT);
							toast.show();
						}
					}
				}).create();
		alertDialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);
		alertDialog.show();
	}

	private void populateSpinnerItem() {
		DBItem db = new DBItem(context);

		ArrayList<Item> item = db.getAll();

		ItemSpinnerAdapter adapter = new ItemSpinnerAdapter(activity, item);

		spinnerItem.setAdapter(adapter);
	}
}
