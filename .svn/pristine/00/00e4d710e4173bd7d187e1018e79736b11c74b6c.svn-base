package com.example.mygroceries;

import java.util.ArrayList;
import java.util.Locale;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.MenuItem.OnActionExpandListener;
import android.view.MenuItem.OnMenuItemClickListener;
import android.view.View;
import android.view.ViewGroup;
import android.view.inputmethod.InputMethodManager;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Toast;

import com.example.mygroceries.adapter.CategoryAdapter;
import com.example.mygroceries.database.Category;
import com.example.mygroceries.database.DBCategory;

public class CategoriesFragment extends Fragment {
	private CategoryAdapter adapter;
	private ListView categoriesList;
	private View rootView;
	private EditText categoryName;
	private DBCategory db;
	private EditText editsearch;
	private LayoutInflater layoutInflater;

	@Override
	public View onCreateView(LayoutInflater layoutInflater, ViewGroup container, Bundle savedInstanceState) {
		this.layoutInflater = layoutInflater;
		rootView = layoutInflater.inflate(R.layout.fragment_categories, container, false);
		setHasOptionsMenu(true);
		
		return rootView;
	}
	
	@Override
    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
    	inflater.inflate(R.menu.add_menu, menu);
    	
    	final Activity activity = this.getActivity();
			
		editsearch = (EditText) menu.findItem(R.id.search_menu).getActionView();	
    	editsearch.addTextChangedListener(textWatcher);
		
		MenuItem menuSearch = menu.findItem(R.id.search_menu);

		menuSearch.setOnActionExpandListener(new OnActionExpandListener() {
			
			@Override
			public boolean onMenuItemActionExpand(MenuItem item) {
				editsearch.setText("");
                editsearch.clearFocus();
                return true;
			}
			
			@Override
			public boolean onMenuItemActionCollapse(MenuItem item) {
				editsearch.requestFocus();
				 
                // Force the keyboard to show on EditText focus
//                InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
//                imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);
                return true;
			}
		});

		final View textEntryView = layoutInflater.inflate(R.layout.alert_dialog_text_entry, null);
		categoryName = (EditText) textEntryView.findViewById(R.id.alert_dialog_text);	
		
		MenuItem menuAdd = menu.findItem(R.id.add_menu);
		menuAdd.setOnMenuItemClickListener(new OnMenuItemClickListener() {
			
			@Override
			public boolean onMenuItemClick(MenuItem item) {
						
				new AlertDialog.Builder(activity)
		    	.setTitle(R.string.alert_dialog_add_category)
		    	.setView(textEntryView)
		    	.setNegativeButton(R.string.alert_dialog_cancel, new DialogInterface.OnClickListener() {
					
					@Override
					public void onClick(DialogInterface dialog, int which) {
		
					}
				})
		    	.setPositiveButton(R.string.alert_dialog_ok, new DialogInterface.OnClickListener() {
					
					@Override
					public void onClick(DialogInterface dialog, int which) {
						Context context = rootView.getContext();
						if(categoryName.getText().toString().equals(""))
							return;
						Toast toast = Toast.makeText(context, R.string.alert_dialog_add_category_toast, Toast.LENGTH_SHORT);
						toast.show();
						
						Category cat = new Category(categoryName.getText().toString());
						db.insert(cat);
						adapter.addRow(cat);
						adapter.notifyDataSetChanged();
					}
				}).show();
				return false;
			}
		});
    }

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		super.onActivityCreated(savedInstanceState);

		categoriesList = (ListView) rootView.findViewById(R.id.category_list);

		db = new DBCategory(rootView.getContext());

		ArrayList<Category> categories = db.getAll();

		adapter = new CategoryAdapter(rootView.getContext(), categories);

		categoriesList.setAdapter(adapter);
	}
	
	private TextWatcher textWatcher = new TextWatcher() {
		
		@Override
		public void onTextChanged(CharSequence s, int start, int before, int count) {
			Log.d("TESTE", "TEXTWATHER");
			String text = editsearch.getText().toString()
					.toLowerCase(Locale.getDefault());

			adapter.filter(text);
		}
		
		@Override
		public void beforeTextChanged(CharSequence s, int start, int count,
				int after) {
		}
		
		@Override
		public void afterTextChanged(Editable s) {
		}
	};
}


//Dialogs dialogs = new Dialogs(rootView.getContext());
//
//dialogs.confirmationDialog(this.getActivity(), textEntryView, this.getString(R.string.alert_dialog_category), "", "");
//   	
//if (dialogs.getOption()){
//	if(!categoryName.getText().toString().equals("")){
//		Category cat = new Category(categoryName.getText().toString());
//		long id = db.insert(cat);
//		
//		cat.setId(id);
//		
//		adapter.addRow(cat);
//		adapter.notifyDataSetChanged();
//						
//		dialogs.showDialog("Categoria " + categoryName.getText().toString() + " adicionada.");
//	}			
//}